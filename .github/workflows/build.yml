name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: macOS Intel
            os: macos-latest
            arch: amd64
            target: darwin_amd64
          - name: macOS Apple Silicon
            os: macos-latest
            arch: arm64
            target: darwin_arm64
          - name: Windows AMD64
            os: windows-latest
            arch: amd64
            target: windows_amd64
          - name: Windows ARM64
            os: windows-latest
            arch: arm64
            target: windows_arm64
          - name: Linux AMD64
            os: ubuntu-latest
            arch: amd64
            target: linux_amd64
          - name: Linux ARM64
            os: ubuntu-latest
            arch: arm64
            target: linux_arm64

    runs-on: ${{ matrix.os }}
    name: Build for ${{ matrix.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Install Wails CLI
        run: |
          go install github.com/wailsapp/wails/v3/cmd/wails@latest

      - name: Build application
        run: |
          wails build -platform ${{ matrix.target }} -clean -webview2 embed

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exam-assistant-${{ matrix.target }}
          path: build/bin/exam_assistant*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            exam-assistant-darwin_amd64/*
            exam-assistant-darwin_arm64/*
            exam-assistant-windows_amd64/*
            exam-assistant-windows_arm64/*
            exam-assistant-linux_amd64/*
            exam-assistant-linux_arm64/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 